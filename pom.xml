<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.commandercool</groupId>
	<artifactId>cloud-surfer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>cloud-surfer</name>
	<description>Cloud solution for FreeSurfer</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<!-- use latest version https://github.com/docker-java/docker-java/releases -->
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
			<version>2.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>

				<!-- Specify the maven code generator plugin -->
				<!-- Use org.jooq              for the Open Source edition
                         org.jooq.pro          for commercial editions,
                         org.jooq.pro-java-8   for commercial editions with Java 8 support,
                         org.jooq.pro-java-6   for commercial editions with Java 6 support,
                         org.jooq.trial        for the free trial edition,
                         org.jooq.trial-java-8 for the free trial edition with Java 8 support,
                         org.jooq.trial-java-6 for the free trial edition with Java 6 support

                     Note: Only the Open Source Edition is hosted on Maven Central.
                           Import the others manually from your distribution -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>3.13.2</version>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.3.7</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
				<configuration>

					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://localhost/cloudsurfer</url>
						<user>postgres</user>
						<password>postgres</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<excludes></excludes>
							<!-- In case your database supports catalogs, e.g. SQL Server:
                            <inputCatalog>public</inputCatalog>
                              -->
							<inputSchema>cloudsurfer</inputSchema>
						</database>
						<target>
							<packageName>com.github.commandercool.cloudsurfer.db</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
